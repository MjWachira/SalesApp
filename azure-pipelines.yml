trigger:
- main

pool:
  name: 'Default'  # Your self-hosted agent pool

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(Build.ArtifactStagingDirectory)/SalesApp'
  publishDirectory: '$(Build.ArtifactStagingDirectory)/publish'

steps:
# Step 1: Install .NET SDK (this ensures the agent has the correct SDK installed)
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Step 2: Restore dependencies using `dotnet restore` in a PowerShell or Bash script
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Restoring dependencies"
      dotnet restore $(Build.SourcesDirectory)/SalesApp.sln  # Adjust path to your solution file

# Step 3: Build the project using `dotnet build`
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Building the project"
      dotnet build $(Build.SourcesDirectory)/SalesApp.sln --configuration $(buildConfiguration) --no-restore

# Step 4: Publish the application using `dotnet publish`
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Publishing the project"
      dotnet publish $(Build.SourcesDirectory)/SalesApp.sln --configuration $(buildConfiguration) --output $(publishDirectory) --no-build

# Step 5: Copy files to artifact staging directory
- task: CopyFiles@2
  inputs:
    SourceFolder: $(publishDirectory)
    Contents: '**'
    TargetFolder: $(Build.ArtifactStagingDirectory)/SalesApp

# Step 6: Publish build artifacts to the pipeline container
- task: PublishBuildArtifacts@1
  inputs:
    ArtifactName: 'SalesApp'
    publishLocation: 'Container'

# Step 7: Deploy the app to the IIS VM using PowerShell
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Deploying to IIS"
      $sourcePath = "$(Build.ArtifactStagingDirectory)/SalesApp"
      $destinationPath = "C:\inetpub\wwwroot\SalesApp"  # IIS root folder
      # Copy files to IIS directory
      Copy-Item -Path $sourcePath\* -Destination $destinationPath -Recurse -Force
      # Restart IIS to apply changes
      iisreset
