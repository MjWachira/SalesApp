trigger:
- main

pool:
  name: SelfHostedPool

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build and Publish .NET 9 Application'
    steps:
    - checkout: self

    - task: UseDotNet@2
      displayName: 'Setup .NET 9'
      inputs:
        packageType: 'sdk'
        version: '9.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
        dotnet restore
        dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)/PublishedApp
      displayName: 'Restore and Build'

    - task: PublishBuildArtifacts@1
      displayName: 'Upload Build Artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/PublishedApp'
        artifactName: 'salesapp'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy to IIS on Azure VM'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Artifact'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'salesapp'
        downloadPath: '$(Build.ArtifactStagingDirectory)/PublishedApp'

    - task: InstallSSHKey@0
      displayName: 'Install SSH Key'
      inputs:
        knownHostsEntry: $(KNOWN_HOSTS)
        sshKeySecureFile: 'SSH_PRIVATE_KEY'
        sshPassphrase: ''

    - script: |
        ssh-keyscan -H 20.81.164.12 >> ~/.ssh/known_hosts
        ssh -o BatchMode=yes -v vmadmin@20.81.164.12 "echo SSH connection verified!"
      displayName: 'Verify SSH Connection'

    - script: |
        ssh -o BatchMode=yes vmadmin@20.81.164.12 "powershell -Command \"if (-not (Test-Path 'C:\\inetpub\\wwwroot\\SalesApp')) { New-Item -ItemType Directory -Path 'C:\\inetpub\\wwwroot\\SalesApp' -Force }\""
      displayName: 'Create SalesApp Directory'

    - task: PowerShell@2
      displayName: 'Copy Files to SalesApp'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Deploying files directly to C:\inetpub\wwwroot\SalesApp"
          
          # Clear target directory
          $clearCommand = "Remove-Item 'C:\inetpub\wwwroot\SalesApp\*' -Recurse -Force -ErrorAction SilentlyContinue"
          ssh -o BatchMode=yes vmadmin@20.81.164.12 "powershell -Command `"$clearCommand`""
          
          # Copy files
          $sourcePath = "$(Build.ArtifactStagingDirectory)/PublishedApp"
          Get-ChildItem -Path $sourcePath | ForEach-Object {
              $fileName = $_.Name
              Write-Host "Copying $fileName..."
              scp -v -r -o BatchMode=yes "$sourcePath/$fileName" vmadmin@20.81.164.12:"C:/inetpub/wwwroot/SalesApp/"
          }
          Write-Host "File copy completed successfully"

    - task: PowerShell@2
      displayName: 'Set Permissions'
      inputs:
        targetType: 'inline'
        script: |
          $setPerms = @'
          & icacls "C:\inetpub\wwwroot\SalesApp" /grant IIS_IUSRS:(OI)(CI)F /T
          & icacls "C:\inetpub\wwwroot\SalesApp" /grant "NT AUTHORITY\SYSTEM":(OI)(CI)F /T
          exit 0
          '@
          ssh -o BatchMode=yes vmadmin@20.81.164.12 "powershell -Command `"$setPerms`""

    - script: |
        ssh -o BatchMode=yes vmadmin@20.81.164.12 "iisreset"
      displayName: 'Restart IIS'