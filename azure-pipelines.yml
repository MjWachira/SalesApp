trigger:
- main

pool:
  name: "default"  # Use the default agent pool

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build and Publish .NET 9 Application'
    steps:
    - checkout: self

    - task: UseDotNet@2
      displayName: 'Setup .NET 9'
      inputs:
        packageType: 'sdk'
        version: '9.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
        dotnet restore
        dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)/PublishedApp
      displayName: 'Restore and Build'

    - task: PublishBuildArtifacts@1
      displayName: 'Upload Build Artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/PublishedApp'
        artifactName: 'SalesApp'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  jobs:
  - job: DeployToIIS
    displayName: 'Deploy to IIS using Default Pool'
    pool:
      name: "default"  # Ensure the deployment also runs on the default pool
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Artifact'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'SalesApp'
        downloadPath: '$(Build.ArtifactStagingDirectory)/PublishedApp'

    - task: PowerShell@2
      displayName: 'Stop IIS Before Deployment'
      inputs:
        targetType: 'inline'
        script: |
          Stop-Service -Name 'W3SVC' -Force

    - task: PowerShell@2
      displayName: 'Deploy Application to IIS'
      inputs:
        targetType: 'inline'
        script: |
          $sourcePath = "$(Build.ArtifactStagingDirectory)/PublishedApp"
          $destinationRootPath = "C:\inetpub\wwwroot"
          $destinationPath = "C:\inetpub\wwwroot\SalesApp"

          # Ensure the destination folder (SalesApp) exists
          if (Test-Path $destinationPath) {
            Remove-Item -Recurse -Force $destinationPath
          }

          # Create the SalesApp directory inside wwwroot
          New-Item -ItemType Directory -Path $destinationPath -Force

          # Copy the files to the root directory, not to SalesApp directly
          Copy-Item -Path "$sourcePath\*" -Destination $destinationRootPath -Recurse -Force

          # Set Full Control permissions for IIS_IUSRS on the SalesApp folder
          $acl = Get-Acl $destinationPath
          $rule = New-Object System.Security.AccessControl.FileSystemAccessRule("IIS_IUSRS", "FullControl", "ContainerInherit,ObjectInherit", "None", "Allow")
          $acl.SetAccessRule($rule)

          # Apply the updated ACL to the SalesApp folder
          Set-Acl -Path $destinationPath -AclObject $acl

          Write-Host "Permissions successfully applied to $destinationPath"

    - task: PowerShell@2
      displayName: 'Start IIS After Deployment'
      inputs:
        targetType: 'inline'
        script: |
          Start-Service -Name 'W3SVC'
