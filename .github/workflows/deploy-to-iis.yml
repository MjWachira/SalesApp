name: Deploy to Azure Windows VM

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Build and Publish
        run: |
          dotnet restore
          dotnet publish -c Release -o published -r win-x64 --self-contained false

      - uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: published

  deploy:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: webapp
          path: published

      - name: Configure WinRM
        run: |
          # Enable PowerShell Remoting
          $winrmPort = 5986
          $vmIp = "172.191.12.102"
          $credential = New-Object System.Management.Automation.PSCredential("adminuser", (ConvertTo-SecureString "${{ secrets.VM_PASSWORD }}" -AsPlainText -Force))
          
          # Trust the target VM (for testing only - use proper cert validation in production)
          Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value $vmIp -Force
          
          # Test connection
          Test-WSMan -ComputerName $vmIp -Port $winrmPort -UseSSL -Credential $credential -Authentication Negotiate
        shell: pwsh

      - name: Deploy via WinRM
        run: |
          $session = New-PSSession -ComputerName 172.191.12.102 -Port 5986 -Credential $credential -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)
          
          # Stop IIS if running
          Invoke-Command -Session $session -ScriptBlock { 
              Stop-Service W3SVC -ErrorAction SilentlyContinue
          }
          
          # Copy files
          Copy-Item -Path "published\*" -Destination "C:\inetpub\salesapp\" -ToSession $session -Recurse -Force
          
          # Restart IIS
          Invoke-Command -Session $session -ScriptBlock { 
              Start-Service W3SVC
              iisreset
          }
          
          Remove-PSSession $session
        env:
          VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
        shell: pwsh
